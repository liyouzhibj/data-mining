<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhdsj.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.xhdsj.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="delete_flag" jdbcType="SMALLINT" property="deleteFlag" />
    <result column="crawling_url" jdbcType="VARCHAR" property="crawlingUrl" />
    <result column="crawling_id" jdbcType="SMALLINT" property="crawlingId" />
    <result column="crawling_time" jdbcType="TIMESTAMP" property="crawlingTime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xhdsj.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
       id, title, create_time, publish_time, delete_flag, crawling_url, crawling_id, crawling_time,source
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xhdsj.model.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.xhdsj.model.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
   <where>
    <if test="mytext != null">
      content like concat('%',#{mytext},'%')
     or title like concat('%',#{mytext},'%')
    </if>
   </where>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>

    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>

  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhdsj.model.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <insert id="insert" parameterType="com.xhdsj.model.Article">
    insert into article (id, title, create_time, 
      publish_time, delete_flag, crawling_url, 
      crawling_id, crawling_time, content,source
      )
    values (
            #{id,jdbcType=INTEGER},
            #{title,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{publishTime,jdbcType=TIMESTAMP},
            #{deleteFlag,jdbcType=SMALLINT},
            #{crawlingUrl,jdbcType=VARCHAR},
            #{crawlingId,jdbcType=SMALLINT},
            #{crawlingTime,jdbcType=TIMESTAMP},
            #{content,jdbcType=LONGVARCHAR},
            #{source,jdbcType=VARCHAR}
      )
  </insert>


  <insert id="insertSelective" parameterType="com.xhdsj.model.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="crawlingUrl != null">
        crawling_url,
      </if>
      <if test="crawlingId != null">
        crawling_id,
      </if>
      <if test="crawlingTime != null">
        crawling_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=SMALLINT},
      </if>
      <if test="crawlingUrl != null">
        #{crawlingUrl,jdbcType=VARCHAR},
      </if>
      <if test="crawlingId != null">
        #{crawlingId,jdbcType=SMALLINT},
      </if>
      <if test="crawlingTime != null">
        #{crawlingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>


  <select id="countByExample" parameterType="com.xhdsj.model.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <where>
    <if test="mytext != null">
      content like concat('%',#{mytext},'%')
      or title like concat('%',#{mytext},'%')
    </if>
    </where>
  </select>



  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=SMALLINT},
      </if>
      <if test="record.crawlingUrl != null">
        crawling_url = #{record.crawlingUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.crawlingId != null">
        crawling_id = #{record.crawlingId,jdbcType=SMALLINT},
      </if>
      <if test="record.crawlingTime != null">
        crawling_time = #{record.crawlingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=SMALLINT},
      crawling_url = #{record.crawlingUrl,jdbcType=VARCHAR},
      crawling_id = #{record.crawlingId,jdbcType=SMALLINT},
      crawling_time = #{record.crawlingTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByExample" parameterType="map">
    update article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=SMALLINT},
      crawling_url = #{record.crawlingUrl,jdbcType=VARCHAR},
      crawling_id = #{record.crawlingId,jdbcType=SMALLINT},
      crawling_time = #{record.crawlingTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByPrimaryKeySelective" parameterType="com.xhdsj.model.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=SMALLINT},
      </if>
      <if test="crawlingUrl != null">
        crawling_url = #{crawlingUrl,jdbcType=VARCHAR},
      </if>
      <if test="crawlingId != null">
        crawling_id = #{crawlingId,jdbcType=SMALLINT},
      </if>
      <if test="crawlingTime != null">
        crawling_time = #{crawlingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xhdsj.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=SMALLINT},
      crawling_url = #{crawlingUrl,jdbcType=VARCHAR},
      crawling_id = #{crawlingId,jdbcType=SMALLINT},
      crawling_time = #{crawlingTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.xhdsj.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=SMALLINT},
      crawling_url = #{crawlingUrl,jdbcType=VARCHAR},
      crawling_id = #{crawlingId,jdbcType=SMALLINT},
      crawling_time = #{crawlingTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--添加操作-->
  <insert id="insertByBatch" parameterType="java.util.List">
   insert into article (id, title, content,create_time,publish_time, delete_flag, crawling_url,
   crawling_id, crawling_time, source)
  values
  <foreach collection="list" item="item" index="index" separator=",">
    (#{item.id,jdbcType=INTEGER},
    #{item.title,jdbcType=VARCHAR},
    #{item.content,jdbcType=LONGVARCHAR},
    #{item.createTime,jdbcType=TIMESTAMP},
    #{item.publishTime,jdbcType=TIMESTAMP},
    #{item.deleteFlag,jdbcType=SMALLINT},
    #{item.crawlingUrl,jdbcType=VARCHAR},
    #{item.crawlingId,jdbcType=SMALLINT},
    #{item.crawlingTime,jdbcType=TIMESTAMP},
    #{item.source,jdbcType=VARCHAR}
    )
    </foreach>
  </insert>

</mapper>